#!/bin/sh
# https://github.com/dxlr8r/kubefs
if test ${UID:--1} -eq 0; then
  : ${KUBEFS_DIR:="/usr/share/kubefs"}
else
  : ${KUBEFS_DIR:="$HOME/.local/share/kubefs"}
fi
mkdir -p "$KUBEFS_DIR"
printf '%s\n' '' | base64 --decode > "$KUBEFS_DIR/kubefs.sh"
printf '%s\n' 'IyEvYmluL3NoCiMgaHR0cHM6Ly9naXRodWIuY29tL2R4bHI4ci9rdWJlZnMKIyBoYXZpbmcgYC5rdWJlYXV0aGAgYW5kIGAua3ViZWNvbmZpZ2AgaW4gdGhlIHNhbWUgZGlyZWN0b3J5IGlzIGEgZ29vZCBwcmFjdGljZS4gQnV0IG5vdCByZXF1aXJlZCBieSBrdWJlZnMuCgpFTVBUWV9LVUJFQ09ORklHPSdhcGlWZXJzaW9uOiB2MQpraW5kOiBDb25maWcKY2x1c3RlcnM6IFtdCmNvbnRleHRzOiBbXQpjdXJyZW50LWNvbnRleHQ6ICIiCnVzZXJzOiBbXScKClNQQVRIPSQoQ0RQQVRIPSBjZCAtLSAiJChkaXJuYW1lIC0tICIkMCIpIiAmJiBwd2QpCiMgY2hlY2sgaWYgLmt1YmVjb25maWcgZXhpc3QgaW4gdGhlIHNhbWUgZGlyZWN0b3J5IGFzIGt1YmVsb2dpbl9pbml0IGlzIGNhbGxlZC9zb3VyY2VkCmlmICEgdGVzdCAtZiAiJHtTUEFUSH0vLmt1YmVjb25maWciOyB0aGVuCiAgcHJpbnRmICclc1xuJyAiJEVNUFRZX0tVQkVDT05GSUciID4gIiR7U1BBVEh9Ly5rdWJlY29uZmlnIgogIGNobW9kIDYwMCAiJHtTUEFUSH0vLmt1YmVjb25maWciCmZpCmV4cG9ydCBLVUJFQ09ORklHPSIke1NQQVRIfS8ua3ViZWNvbmZpZyIKCnRpbWVvdXQgMSBrdWJlY3RsIHZlcnNpb24gPi9kZXYvbnVsbCAyPiYxIFwKJiYgS1VCRV9BVVRIRU5USUNBVEVEPXRydWUgXAp8fCB1bnNldCBLVUJFX0FVVEhFTlRJQ0FURUQK' | base64 --decode > "$KUBEFS_DIR/kubeauth_init.sh"
printf '%s\n' 'IyEvYmluL3NoCiMgaHR0cHM6Ly9naXRodWIuY29tL2R4bHI4ci9rdWJlZnMKX2tmc19hZGRvbnNfa3ViZWN0bF9hbGlhc19jb21wbGV0ZSgpIHsKdGVzdCAiJHtLVUJFRlNfQ09NUExFVElPTjotdHJ1ZX0iID0gJ3RydWUnIHx8IHJldHVybiAwCnRlc3QgLXQgMSB8fCByZXR1cm4gMApjb21tYW5kIC12IF9nZXRfY29tcF93b3Jkc19ieV9yZWYgPi9kZXYvbnVsbCAyPiYxIHx8IHJldHVybiAwCmNvbW1hbmQgLXYgX19zdGFydF9rdWJlY3RsID4vZGV2L251bGwgMj4mMSB8fCByZXR1cm4gMApldmFsICIkKHByaW50ZiAiCl9rdWJlY3RsX2NvbXBsZXRpb25zXyQxKCkgewpsb2NhbCBjb21wbApjb21wbD1cJHtDT01QX1dPUkRTW0BdOjF9CigoIENPTVBfQ1dPUkQgKz0gMiApKQpDT01QX1dPUkRTPSgga3ViZWN0bCAkMiBcIlwke2NvbXBsOi0gfVwiICkKX19zdGFydF9rdWJlY3RsCn0KY29tcGxldGUgLW8gZGVmYXVsdCAtRiBfa3ViZWN0bF9jb21wbGV0aW9uc18kMSAkMQoiKSIKfQpfa2ZzX2FkZG9uc19rdWJlY3RsX2FsaWFzX2NvbXBsZXRlIGt4ICdjb25maWcgdXNlLWNvbnRleHQnCmt4KCkgKAppZiBjb21tYW5kIC12IGt1YmVmcyA+L2Rldi9udWxsIDI+JjE7IHRoZW4KZXhwb3J0IEtVQkVDT05GSUc9JChrdWJlZnMpCmZpCmlmIHRlc3QgIiQxIjsgdGhlbgprdWJlY3RsIGNvbmZpZyB1c2UtY29udGV4dCAiJDEiCmVsc2UKX3JjdHg9JChrdWJlY3RsIGNvbmZpZyBnZXQtY29udGV4dHMpCl9oZWFkZXI9JChwcmludGYgJyVzXG4nICIkX3JjdHgiIHwgaGVhZCAtbjEpCl9tYXhfbGVuPSQocHJpbnRmICclc1xuJyAiJF9yY3R4IiB8IGF3ayAne3ByaW50IGxlbmd0aH0nIHwgc29ydCAtcm4gfCBoZWFkIC1uMSkKX3NlcD0kJ1x0JwpfY29sdW1ucz0ke0tYX0NPTFVNTlM6LSdOQU1FLE5BTUVTUEFDRSxDTFVTVEVSLENVUlJFTlQnfQpfY3R4PSQocHJpbnRmICclc1xuJyAiJF9yY3R4IiBcCnwgYXdrIC12IFNFUD0iJF9zZXAiIC12IENPTFVNTlM9IiRfY29sdW1ucyIgXAotdiBIRUFEPSIkX2hlYWRlciIgLXYgTUFYTEVOPSIkX21heF9sZW4iIFwKJ0JFR0lOIHsKc3BsaXQoQ09MVU1OUywgVENPTCwgIiwiKQpUQ09MX0xFTj0wOyBmb3IoQ09MIGluIFRDT0wpeyBUQ09MX0xFTisrIH0KR0FQPTM7CkNVUlJFTlRfU1RBUlQ9MDsKQ1VSUkVOVF9MRU49aW5kZXgoSEVBRCwgIk5BTUUiKS0xOwpOQU1FX1NUQVJUPUNVUlJFTlRfTEVOKzE7Ck5BTUVfTEVOPWluZGV4KEhFQUQsICJDTFVTVEVSIiktTkFNRV9TVEFSVDsKQ0xVU1RFUl9TVEFSVD1OQU1FX1NUQVJUK05BTUVfTEVOCkNMVVNURVJfTEVOPWluZGV4KEhFQUQsICJBVVRISU5GTyIpLUNMVVNURVJfU1RBUlQ7CkFVVEhJTkZPX1NUQVJUPUNMVVNURVJfU1RBUlQrQ0xVU1RFUl9MRU4KQVVUSElORk9fTEVOPWluZGV4KEhFQUQsICJOQU1FU1BBQ0UiKS1BVVRISU5GT19TVEFSVDsKTkFNRVNQQUNFX1NUQVJUPUFVVEhJTkZPX1NUQVJUK0FVVEhJTkZPX0xFTgpOQU1FU1BBQ0VfTEVOPU1BWExFTi1OQU1FU1BBQ0VfU1RBUlQ7Cn0KewpEQ09MWyJDVVJSRU5UIl09c3Vic3RyKCQwLCBDVVJSRU5UX1NUQVJULCBDVVJSRU5UX0xFTi1HQVApOwpEQ09MWyJOQU1FIl09c3Vic3RyKCQwLCBOQU1FX1NUQVJULCBOQU1FX0xFTi1HQVApOwpEQ09MWyJDTFVTVEVSIl09c3Vic3RyKCQwLCBDTFVTVEVSX1NUQVJULCBDTFVTVEVSX0xFTi1HQVApOwpEQ09MWyJBVVRISU5GTyJdPXN1YnN0cigkMCwgQVVUSElORk9fU1RBUlQsIEFVVEhJTkZPX0xFTi1HQVApOwpfTkFNRVNQQUNFPXN1YnN0cigkMCwgTkFNRVNQQUNFX1NUQVJUKTsKZm9yIChpID0gMDsgaSA8PSAoTUFYTEVOLWxlbmd0aCgkMCktMSk7IGkrKykgeyBfTkFNRVNQQUNFPV9OQU1FU1BBQ0UgIiAiIH0KRENPTFsiTkFNRVNQQUNFIl09X05BTUVTUEFDRQpmb3IoaT0xOyBpIDw9IFRDT0xfTEVOOyBpKyspIHsKcHJpbnRmICIlcyIsIERDT0xbVENPTFtpXV0KaWYoaSA8IFRDT0xfTEVOKSB7IHByaW50ZiAiJXMiLCBTRVAgfQp9CnByaW50ZiAiXG4iCn0nKQpfY3VycmVudF9jb2w9JChcCnByaW50ZiAnJXMnICIkX2NvbHVtbnMiIFwKfCB0ciAsICdcbidcCnwgYXdrICd7aWYoJDEgPT0gIkNVUlJFTlQiKSB7cHJpbnQgTlJ9IH0nKQppZiB0ZXN0IC10IDE7IHRoZW4KcHJpbnRmICclc1xuJyAiJF9jdHgiIHwgaGVhZCAtbjEKZmkKcHJpbnRmICclc1xuJyAiJF9jdHgiIFwKfCBhd2sgJ3tpZihOUiA+IDEpIHtwcmludH19JyBcCnwgc29ydCAtdCAiJF9zZXAiIC1rJHtfY3VycmVudF9jb2x9cgpmaQopCl9rZnNfYWRkb25zX2t1YmVjdGxfYWxpYXNfY29tcGxldGUga24gJ2dldCBucyAtLW5vLWhlYWRlcnMgLW8gY3VzdG9tLWNvbHVtbnM9IjoubWV0YWRhdGEubmFtZSInCmtuKCkgKAppZiBjb21tYW5kIC12IGt1YmVmcyA+L2Rldi9udWxsIDI+JjE7IHRoZW4KZXhwb3J0IEtVQkVDT05GSUc9JChrdWJlZnMpCmZpCmlmIHRlc3QgIiQxIjsgdGhlbgprdWJlY3RsIGNvbmZpZyBzZXQtY29udGV4dCAkMQplbHNlCl9jdXJyZW50PSQoa3ViZWN0bCBjb25maWcgdmlldyAtLW1pbmlmeSAtbyBqc29ucGF0aD0iey4ubmFtZXNwYWNlfSIpCl9hbGw9JChrdWJlY3RsIGdldCBucyAtbyBuYW1lIHwgY3V0IC1kLyAtZjIpCl9tYXhfbGVuPSQocHJpbnRmICclc1xuJyAiJF9hbGwiIHwgYXdrICd7cHJpbnQgbGVuZ3RofScgfCBzb3J0IC1ybiB8IGhlYWQgLW4xKQpfc2VwPSQnXHQnCl9ucz0kKHByaW50ZiAnJXNcbicgIiRfYWxsIiBcCnwgcHJpbnRmICclc1x0JXNcbiVzXG4nICdOQU1FJyAnQ1VSUkVOVCcgIiQoY2F0KSIgXAp8IGF3ayAtdiBDVVJSRU5UPSIkX2N1cnJlbnQiIC12IFNFUD0iJF9zZXAiIC12IE1BWExFTj0iJF9tYXhfbGVuIiAnCnsKcHJpbnRmICIlcyIsICQxCmZvcihpID0gMTsgaSA8PSAoTUFYTEVOLWxlbmd0aCgkMSkpOyBpKyspIHsKcHJpbnRmICIgIgp9CnByaW50ZiAiJXMiLFNFUAppZigkMSA9PSBDVVJSRU5UKSB7IHByaW50ZiAiJXMiLCAiKiIgfQplbHNlIHsgcHJpbnRmICIlcyIsICQyIH0KcHJpbnRmICJcbiIKfScpCmlmIHRlc3QgLXQgMTsgdGhlbgpwcmludGYgJyVzXG4nICIkX25zIiB8IGhlYWQgLW4xCmZpCnByaW50ZiAiJXNcbiIgIiRfbnMiIFwKfCBhd2sgJ3tpZihOUiA+IDEpIHtwcmludH19JyBcCnwgc29ydCAtdCAiJF9zZXAiIC1rMnIKZmkKKQprdWJlYXV0aF9pbml0KCkgewppZiB0ZXN0IC1lICIkezE6LSQocHdkKX0vLmt1YmVhdXRoIjsgdGhlbgpwcmludGYgJ0VSUk9SOiBgJXNgIGFscmVhZHkgZXhpc3RzLlxuJyAiJHsxOi19Ly5rdWJlYXV0aCIgPiAvZGV2L3N0ZGVycgpyZXR1cm4gMQplbHNlCnByaW50ZiAnJWInICcjIS9iaW4vc2hcbnNldCAtZVxuXG4jIHNvdXJjZSBrdWJlYXV0aF9pbml0LnNoXG4uICRIT01FLy5sb2NhbC9zaGFyZS9rdWJlZnMva3ViZWF1dGhfaW5pdC5zaCAyPi9kZXYvbnVsbCB8fCBcXFxuLiAvdXNyL3NoYXJlL2t1YmVmcy9rdWJlYXV0aF9pbml0LnNoXG5cbiMgaWYgYWxyZWFkeSBhdGhlbnRpY2F0ZWQsIGV4aXRcbnRlc3QgLW4gIiR7S1VCRV9BVVRIRU5USUNBVEVEOi19IiAmJiBleGl0IHx8IDpcblxuIyBteWF1dGhfY21kXG4nID4gIiR7MTotJChwd2QpfS8ua3ViZWF1dGgiCmZpCn0K' | base64 --decode > "$KUBEFS_DIR/kubefs_addons.sh"
